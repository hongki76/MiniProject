<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">

    <resultMap id="productSelectMap" type="com.model2.mvc.service.domain.Product">
        <result property="prodNo"      column="prod_no"      jdbcType="INTEGER"/>
        <result property="prodName"    column="prod_name"    jdbcType="VARCHAR"/>
        <result property="price"       column="price"        jdbcType="INTEGER"/>
        <result property="manuDate"    column="manufacture_day"    jdbcType="VARCHAR"/>
        <result property="fileName"    column="image_file"    jdbcType="VARCHAR"/>
        <result property="prodDetail"  column="prod_detail"  jdbcType="VARCHAR"/>
        <result property="regDate"     column="reg_date"     jdbcType="DATE"/>
        <!-- from TRANSACTION (latest) -->
        <result property="proTranCode" column="pro_tran_code" jdbcType="VARCHAR"/>
    </resultMap>
    
	<resultMap id="productFileSelectMap" type="com.model2.mvc.service.domain.ProductFile">
	  <id     property="fileNo"   column="file_no"/>
	  <result property="prodNo"   column="prod_no"/>
	  <result property="fileName" column="file_name"/>
	</resultMap>

    <!-- Insert -->
	<insert id="addProduct" parameterType="com.model2.mvc.service.domain.Product">
	  <!-- PK 먼저 뽑아서 product.prodNo 에 넣음 -->
	  <selectKey keyProperty="prodNo" resultType="int" order="BEFORE">
	    SELECT seq_product_prod_no.NEXTVAL FROM dual
	  </selectKey>
	
	  INSERT INTO product
	    (prod_no, prod_name, price, manufacture_day, prod_detail, reg_date)
	  VALUES
	    (#{prodNo},
	     #{prodName},
	     #{price},
	     <choose>
	       <when test="manuDate != null and manuDate != ''">
	         TO_DATE(REGEXP_REPLACE(#{manuDate, jdbcType=VARCHAR}, '[^0-9]', ''), 'YYYYMMDD')
	       </when>
	       <otherwise>NULL</otherwise>
	     </choose>,
	     #{prodDetail},
	     SYSDATE)
	</insert>
	
	<insert id="addProductFile" parameterType="com.model2.mvc.service.domain.ProductFile">
	  INSERT INTO product_file (file_no, prod_no, file_name)
	  VALUES (seq_product_file_no.NEXTVAL, #{prodNo}, #{fileName})
	</insert>

    <!-- Select one with latest tran code (if any) -->
    <select id="getProduct" parameterType="int" resultMap="productSelectMap">
        SELECT p.prod_no, p.prod_name, p.price, p.manufacture_day, p.image_file, p.prod_detail, p.reg_date,
               (SELECT MAX(t.tran_status_code) 
                  FROM transaction t 
                 WHERE t.prod_no = p.prod_no) AS pro_tran_code
          FROM product p
         WHERE p.prod_no = #{value}
    </select>

    <!-- 검색 조건(Where) -->
	<sql id="where-clause">
	  <where>
	
	    <!-- 키워드 분기: 상품명 / 상품가격 -->
	    <if test="searchCondition != null and searchKeyword != null and searchKeyword != ''">
	      <choose>
	        <when test="searchCondition == '0' or searchCondition == 0">
	          AND LOWER(p.prod_name) LIKE '%' || LOWER(#{searchKeyword}) || '%'
	        </when>
	        <when test="searchCondition == '1' or searchCondition == 1">
	          AND LOWER(p.prod_detail) LIKE '%' || LOWER(#{searchKeyword}) || '%'
	        </when>
	        <!-- 날짜(2)는 여기서 분기하지 않음: 아래 regDateKeyword로 독립 처리 -->
	      </choose>
	    </if>
	
	    <!-- ✅ 등록일 독립 필터 (구분자 제거 + 하루 범위) -->
	    <if test="regDateKeyword != null and regDateKeyword != ''">
	      AND p.reg_date &gt;= TO_DATE(REGEXP_REPLACE(#{regDateKeyword}, '[^0-9]', ''), 'YYYYMMDD')
	      AND p.reg_date &lt;  TO_DATE(REGEXP_REPLACE(#{regDateKeyword}, '[^0-9]', ''), 'YYYYMMDD') + 1
	    </if>
	
	    <!-- 가격 범위 -->
	    <if test="minPrice != null">
	      AND p.price &gt;= #{minPrice}
	    </if>
	    <if test="maxPrice != null">
	      AND p.price &lt;= #{maxPrice}
	    </if>
	
	  </where>
	</sql>

    
    <!-- 가격순 정렬 -->
    <sql id="order-by-price">
	  <choose>
	    <when test="orderByPriceAsc == 'ASC' or orderByPriceAsc == 'asc'">
	      ORDER BY p.price ASC
	    </when>
	    <when test="orderByPriceAsc == 'DESC' or orderByPriceAsc == 'desc'">
	      ORDER BY p.price DESC
	    </when>
	    <otherwise>
	      ORDER BY p.prod_no DESC   <!-- 기본 정렬(원하면 변경) -->
	    </otherwise>
	  </choose>
	</sql>

    <!-- List with pagination -->
    <select id="getProductList" parameterType="com.model2.mvc.common.Search" resultMap="productSelectMap">
        SELECT * FROM (
            SELECT inner_table.*, ROWNUM AS rNum FROM (
                SELECT p.prod_no, p.prod_name, p.price, p.manufacture_day, p.image_file, p.prod_detail, p.reg_date,
			        NVL((
			          SELECT MAX(TO_NUMBER(t.tran_status_code))
			            FROM transaction t
			           WHERE t.prod_no = p.prod_no
			        ), 0) AS pro_tran_code
                  FROM product p
                <include refid="where-clause"/>
                <include refid="order-by-price"/>
            ) inner_table
            WHERE ROWNUM &lt;= #{endRowNum}
        )
        WHERE rNum &gt;= #{startRowNum}
    </select>

    <select id="getTotalCount" parameterType="com.model2.mvc.common.Search" resultType="int">
        SELECT COUNT(*)
          FROM product p
        <include refid="where-clause"/>
    </select>

	<!-- Select FileList -->    
	<select id="getProductFileList" parameterType="int" resultMap="productFileSelectMap">
	  SELECT file_no, prod_no, file_name
	  FROM product_file
	  WHERE prod_no = #{prodNo}
	  ORDER BY file_no ASC
	</select>
	
	<!-- 단건 조회: 삭제 전에 물리파일 이름 알아내기 위함 -->
	<select id="getProductFile" parameterType="int" resultType="com.model2.mvc.service.domain.ProductFile">
	  SELECT file_no AS fileNo, prod_no AS prodNo, file_name AS fileName
	  FROM product_file
	  WHERE file_no = #{fileNo}
	</select>

    <!-- Update -->
	<update id="updateProduct" parameterType="com.model2.mvc.service.domain.Product">
	  UPDATE product
	     SET prod_name = #{prodName, jdbcType=VARCHAR},
	         price     = #{price, jdbcType=INTEGER},
	         manufacture_day =
	           <choose>
	             <when test="manuDate != null and manuDate != ''">
	               TO_DATE(#{manuDate, jdbcType=VARCHAR}, 'YYYYMMDD')
	             </when>
	             <otherwise>manufacture_day</otherwise>
	           </choose>,
	         prod_detail = #{prodDetail, jdbcType=VARCHAR}
	   WHERE prod_no = #{prodNo, jdbcType=INTEGER}
	</update>
	
	<!-- 파일 삭제 -->
	<delete id="deleteProductFile" parameterType="int">
	  DELETE FROM product_file
	  WHERE file_no = #{fileNo}
	</delete>

	<!-- 상품명 자동완성: 대소문자 무시 + 부분일치(+ 선택적 limit) -->
	<select id="autoCompleteProductName" parameterType="map" resultType="string">
	  SELECT prod_name
	  FROM (
	    SELECT DISTINCT prod_name
	    FROM PRODUCT
	    WHERE UPPER(prod_name) LIKE '%' || UPPER(#{keywordEsc}) || '%' ESCAPE '\'
	    ORDER BY prod_name
	  )
	  <if test="limit != null and limit &gt; 0">
	    WHERE ROWNUM &lt;= #{limit}
	  </if>
	</select>
	
	<!-- 등록일 자동완성: reg_date가 DATE 타입인 경우 -->
	<select id="autoCompleteRegDate" parameterType="map" resultType="string">
	  SELECT ymd
	  FROM (
	    SELECT DISTINCT TO_CHAR(reg_date, 'YYYYMMDD') AS ymd
	    FROM PRODUCT
	    WHERE TO_CHAR(reg_date, 'YYYYMMDD') LIKE #{prefix} || '%'
	    ORDER BY ymd DESC
	  )
	  WHERE ROWNUM &lt;= #{limit}
	</select>

</mapper>